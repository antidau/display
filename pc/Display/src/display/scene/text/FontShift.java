/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package display.scene.text;

import java.util.Arrays;

/**
 *
 * @author Jakob Wenzel
 */
public class FontShift {
    static String data = "    0x00, 0x00, 0x00, 0x00, 0x00,//  \n" +
"	0x00, 0x00, 0x5F, 0x00, 0x00,// !\n" +
"	0x00, 0x07, 0x00, 0x07, 0x00,// \"\n" +
"	0x14, 0x7F, 0x14, 0x7F, 0x14,// #\n" +
"	0x24, 0x2A, 0x7F, 0x2A, 0x12,// $\n" +
"	0x23, 0x13, 0x08, 0x64, 0x62,// %\n" +
"	0x36, 0x49, 0x55, 0x22, 0x50,// &\n" +
"	0x00, 0x05, 0x03, 0x00, 0x00,// '\n" +
"	0x00, 0x1C, 0x22, 0x41, 0x00,// (\n" +
"	0x00, 0x41, 0x22, 0x1C, 0x00,// )\n" +
"	0x08, 0x2A, 0x1C, 0x2A, 0x08,// *\n" +
"	0x08, 0x08, 0x3E, 0x08, 0x08,// +\n" +
"	0x00, 0x50, 0x30, 0x00, 0x00,// ,\n" +
"	0x08, 0x08, 0x08, 0x08, 0x08,// -\n" +
"	0x00, 0x60, 0x60, 0x00, 0x00,// .\n" +
"	0x20, 0x10, 0x08, 0x04, 0x02,// /\n" +
"	0x3E, 0x51, 0x49, 0x45, 0x3E,// 0\n" +
"	0x00, 0x42, 0x7F, 0x40, 0x00,// 1\n" +
"	0x42, 0x61, 0x51, 0x49, 0x46,// 2\n" +
"	0x21, 0x41, 0x45, 0x4B, 0x31,// 3\n" +
"	0x18, 0x14, 0x12, 0x7F, 0x10,// 4\n" +
"	0x27, 0x45, 0x45, 0x45, 0x39,// 5\n" +
"	0x3C, 0x4A, 0x49, 0x49, 0x30,// 6\n" +
"	0x01, 0x71, 0x09, 0x05, 0x03,// 7\n" +
"	0x36, 0x49, 0x49, 0x49, 0x36,// 8\n" +
"	0x06, 0x49, 0x49, 0x29, 0x1E,// 9\n" +
"	0x00, 0x36, 0x36, 0x00, 0x00,// :\n" +
"	0x00, 0x56, 0x36, 0x00, 0x00,// ;\n" +
"	0x00, 0x08, 0x14, 0x22, 0x41,// <\n" +
"	0x14, 0x14, 0x14, 0x14, 0x14,// =\n" +
"	0x41, 0x22, 0x14, 0x08, 0x00,// >\n" +
"	0x02, 0x01, 0x51, 0x09, 0x06,// ?\n" +
"	0x32, 0x49, 0x79, 0x41, 0x3E,// @\n" +
"	0x7E, 0x11, 0x11, 0x11, 0x7E,// A\n" +
"	0x7F, 0x49, 0x49, 0x49, 0x36,// B\n" +
"	0x3E, 0x41, 0x41, 0x41, 0x22,// C\n" +
"	0x7F, 0x41, 0x41, 0x22, 0x1C,// D\n" +
"	0x7F, 0x49, 0x49, 0x49, 0x41,// E\n" +
"	0x7F, 0x09, 0x09, 0x01, 0x01,// F\n" +
"	0x3E, 0x41, 0x41, 0x51, 0x32,// G\n" +
"	0x7F, 0x08, 0x08, 0x08, 0x7F,// H\n" +
"	0x00, 0x41, 0x7F, 0x41, 0x00,// I\n" +
"	0x20, 0x40, 0x41, 0x3F, 0x01,// J\n" +
"	0x7F, 0x08, 0x14, 0x22, 0x41,// K\n" +
"	0x7F, 0x40, 0x40, 0x40, 0x40,// L\n" +
"	0x7F, 0x02, 0x04, 0x02, 0x7F,// M\n" +
"	0x7F, 0x04, 0x08, 0x10, 0x7F,// N\n" +
"	0x3E, 0x41, 0x41, 0x41, 0x3E,// O\n" +
"	0x7F, 0x09, 0x09, 0x09, 0x06,// P\n" +
"	0x3E, 0x41, 0x51, 0x21, 0x5E,// Q\n" +
"	0x7F, 0x09, 0x19, 0x29, 0x46,// R\n" +
"	0x46, 0x49, 0x49, 0x49, 0x31,// S\n" +
"	0x01, 0x01, 0x7F, 0x01, 0x01,// T\n" +
"	0x3F, 0x40, 0x40, 0x40, 0x3F,// U\n" +
"	0x1F, 0x20, 0x40, 0x20, 0x1F,// V\n" +
"	0x7F, 0x20, 0x18, 0x20, 0x7F,// W\n" +
"	0x63, 0x14, 0x08, 0x14, 0x63,// X\n" +
"	0x03, 0x04, 0x78, 0x04, 0x03,// Y\n" +
"	0x61, 0x51, 0x49, 0x45, 0x43,// Z\n" +
"	0x00, 0x00, 0x7F, 0x41, 0x41,// [\n" +
"	0x02, 0x04, 0x08, 0x10, 0x20,// \\\n" +
"	0x41, 0x41, 0x7F, 0x00, 0x00,// ]\n" +
"	0x04, 0x02, 0x01, 0x02, 0x04,// ^\n" +
"	0x40, 0x40, 0x40, 0x40, 0x40,// _\n" +
"	0x00, 0x01, 0x02, 0x04, 0x00,// `\n" +
"	0x20, 0x54, 0x54, 0x54, 0x78,// a\n" +
"	0x7F, 0x48, 0x44, 0x44, 0x38,// b\n" +
"	0x38, 0x44, 0x44, 0x44, 0x20,// c\n" +
"	0x38, 0x44, 0x44, 0x48, 0x7F,// d\n" +
"	0x38, 0x54, 0x54, 0x54, 0x18,// e\n" +
"	0x08, 0x7E, 0x09, 0x01, 0x02,// f\n" +
"	0x08, 0x14, 0x54, 0x54, 0x3C,// g\n" +
"	0x7F, 0x08, 0x04, 0x04, 0x78,// h\n" +
"	0x00, 0x44, 0x7D, 0x40, 0x00,// i\n" +
"	0x20, 0x40, 0x44, 0x3D, 0x00,// j\n" +
"	0x00, 0x7F, 0x10, 0x28, 0x44,// k\n" +
"	0x00, 0x41, 0x7F, 0x40, 0x00,// l\n" +
"	0x7C, 0x04, 0x18, 0x04, 0x78,// m\n" +
"	0x7C, 0x08, 0x04, 0x04, 0x78,// n\n" +
"	0x38, 0x44, 0x44, 0x44, 0x38,// o\n" +
"	0x7C, 0x14, 0x14, 0x14, 0x08,// p\n" +
"	0x08, 0x14, 0x14, 0x18, 0x7C,// q\n" +
"	0x7C, 0x08, 0x04, 0x04, 0x08,// r\n" +
"	0x48, 0x54, 0x54, 0x54, 0x20,// s\n" +
"	0x04, 0x3F, 0x44, 0x40, 0x20,// t\n" +
"	0x3C, 0x40, 0x40, 0x20, 0x7C,// u\n" +
"	0x1C, 0x20, 0x40, 0x20, 0x1C,// v\n" +
"	0x3C, 0x40, 0x30, 0x40, 0x3C,// w\n" +
"	0x44, 0x28, 0x10, 0x28, 0x44,// x\n" +
"	0x0C, 0x50, 0x50, 0x50, 0x3C,// y\n" +
"	0x44, 0x64, 0x54, 0x4C, 0x44,// z\n" +
"	0x00, 0x08, 0x36, 0x41, 0x00,// {\n" +
"	0x00, 0x00, 0x7F, 0x00, 0x00,// |\n" +
"	0x00, 0x41, 0x36, 0x08, 0x00,// }";
    public static void main(String args[]) {
        StringBuilder build = new StringBuilder();
        boolean was0=false;
        int skip=0;
        for (int i=0;i<data.length();i++) {
            if (skip>0) { skip--; continue; }
            char c = data.charAt(i);
            if (c=='x' && was0) {
                String n = data.substring(i+1, i+3);
                int num = Integer.parseInt(n, 16)*2;
                
                
                
                build.append("x");
                String s = Integer.toHexString(num);
                if (s.length()==1) build.append('0');
                build.append(s);
                
                skip=2;
            } else build.append(c);
                
                
                
            was0=c=='0';
        }
        data = build.toString();
        
        String[] lines = data.split("\n");
        for(String line: lines) {
            char c = line.charAt(line.length()-1);
            String cont = line.substring(0, line.length()-5).trim();
            System.out.println("map.put('"+c+"',new int[] {"+cont+"});");
        }
    }
}
